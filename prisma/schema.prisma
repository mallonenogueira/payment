generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id        String      @id @default(uuid())
    email     String      @unique
    name      String
    document  String
    createdAt DateTime    @default(now()) @map("created_at")
    updatedAt DateTime    @updatedAt @map("updated_at")
    Subscribe Subscribe[]
    Payment   Payment[]

    @@map("accounts")
}

model Product {
    id           String      @id @default(uuid())
    title        String
    description  String
    price        Int
    installments Int
    type         ProductType
    active       Boolean
    createdAt    DateTime    @default(now()) @map("created_at")
    updatedAt    DateTime    @updatedAt @map("updated_at")
    Subscribe    Subscribe[]
}

enum ProductType {
    MONTH
    YEAR
}

model Subscribe {
    id        String          @id @default(uuid())
    price     Int
    status    SubscribeStatus @default(CREATED)
    createdAt DateTime        @default(now()) @map("created_at")
    updatedAt DateTime        @updatedAt @map("updated_at")
    expiredAt DateTime?       @map("expired_at")
    accountId String          @map("account_id")
    account   Account         @relation(fields: [accountId], references: [id])
    productId String          @map("product_id")
    product   Product         @relation(fields: [productId], references: [id])
    Payment   Payment[]

    @@index([accountId])
    @@map("subscribes")
}

enum SubscribeStatus {
    CREATED
    PENDING
    APPROVED
    CANCELED
    EXPIRED
}

model Payment {
    id           String        @id @default(uuid())
    gateway      String?
    gatewayId    String?
    status       PaymentStatus @default(PENDING)
    price        Int
    installments Int
    createdAt    DateTime      @default(now()) @map("created_at")
    approvedAt   DateTime?     @map("approved_at")
    updatedAt    DateTime      @updatedAt @map("updated_at")
    accountId    String        @map("account_id")
    account      Account       @relation(fields: [accountId], references: [id])
    subscribeId  String        @map("subscribe_id")
    subscribe    Subscribe     @relation(fields: [subscribeId], references: [id])

    @@index([accountId])
    @@map("payments")
}

enum PaymentStatus {
    PENDING
    APPROVED
    CANCELED
}
